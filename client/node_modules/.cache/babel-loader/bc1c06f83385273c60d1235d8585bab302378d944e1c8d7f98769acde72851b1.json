{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useWebRTC.js\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useWebRTC(callId, {\n  start = true,\n  isInitiator = false\n}) {\n  _s();\n  const wsRef = useRef();\n  const pcRef = useRef();\n  const dataChannelRef = useRef();\n  const remoteAudioRef = useRef();\n  const localStreamRef = useRef();\n  const [status, setStatus] = useState(\"waiting\");\n  const statusRef = useRef(status);\n  useEffect(() => {\n    statusRef.current = status;\n  }, [status]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [localSpeaking, setLocalSpeaking] = useState(false);\n  const [remoteSpeaking, setRemoteSpeaking] = useState(false);\n  const [remoteMuted, setRemoteMuted] = useState(false);\n\n  // --- Micro local ---\n  useEffect(() => {\n    if (!start) return;\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      localStreamRef.current = stream;\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      const analyser = audioCtx.createAnalyser();\n      const src = audioCtx.createMediaStreamSource(stream);\n      src.connect(analyser);\n      analyser.fftSize = 256;\n      const dataArr = new Uint8Array(analyser.frequencyBinCount);\n      (function detect() {\n        analyser.getByteFrequencyData(dataArr);\n        setLocalSpeaking(dataArr.reduce((a, v) => a + v, 0) / dataArr.length > 30);\n        requestAnimationFrame(detect);\n      })();\n    }).catch(err => console.error(\"Microphone error\", err));\n  }, [start]);\n\n  // --- WebSocket setup ---\n  useEffect(() => {\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n    wsRef.current = new WebSocket(`${serverUrl.replace(/^http/, \"ws\")}?roomId=${callId}`);\n    wsRef.current.onopen = () => console.log(\"WS open\");\n    wsRef.current.onclose = () => console.log(\"WS closed\");\n    wsRef.current.onmessage = async ({\n      data\n    }) => {\n      let msg;\n      try {\n        msg = JSON.parse(data);\n      } catch {\n        return;\n      }\n      switch (msg.type) {\n        case \"room-status\":\n          console.log(\"Room peers:\", msg.peers);\n          if (msg.peers >= 2 && statusRef.current === \"waiting\" && start && isInitiator) {\n            await initiateCall(true);\n          }\n          break;\n        case \"offer\":\n          if (!pcRef.current && start) await initiateCall(false);\n          await pcRef.current.setRemoteDescription(msg.offer);\n          const answer = await pcRef.current.createAnswer();\n          await pcRef.current.setLocalDescription(answer);\n          wsRef.current.send(JSON.stringify({\n            type: \"answer\",\n            answer\n          }));\n          break;\n        case \"answer\":\n          await pcRef.current.setRemoteDescription(msg.answer);\n          break;\n        case \"candidate\":\n          await pcRef.current.addIceCandidate(msg.candidate);\n          break;\n        case \"peer-left\":\n          setStatus(\"peer-left\");\n          break;\n        case \"call-ended\":\n          setStatus(\"ended\");\n          break;\n      }\n    };\n    return () => {\n      var _wsRef$current, _pcRef$current;\n      (_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.close();\n      (_pcRef$current = pcRef.current) === null || _pcRef$current === void 0 ? void 0 : _pcRef$current.close();\n    };\n  }, [callId]); // PAS de start ici\n\n  // --- Initialisation WebRTC ---\n  async function initiateCall(isOfferer) {\n    setStatus(\"connecting\");\n    pcRef.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: process.env.REACT_APP_STUN_SERVER\n      }]\n    });\n    if (!localStreamRef.current) {\n      localStreamRef.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n    }\n    localStreamRef.current.getTracks().forEach(track => pcRef.current.addTrack(track, localStreamRef.current));\n    pcRef.current.ontrack = ({\n      streams: [stream]\n    }) => {\n      if (remoteAudioRef.current) {\n        remoteAudioRef.current.srcObject = stream;\n        remoteAudioRef.current.play().catch(e => console.warn(\"Playback error\", e));\n      }\n      const rt = stream.getAudioTracks()[0];\n      if (rt) {\n        rt.onmute = () => setRemoteMuted(true);\n        rt.onunmute = () => setRemoteMuted(false);\n      }\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      const analyser = audioCtx.createAnalyser();\n      const src = audioCtx.createMediaStreamSource(stream);\n      src.connect(analyser);\n      analyser.fftSize = 256;\n      const dataArr = new Uint8Array(analyser.frequencyBinCount);\n      (function detect() {\n        analyser.getByteFrequencyData(dataArr);\n        setRemoteSpeaking(dataArr.reduce((a, v) => a + v, 0) / dataArr.length > 30);\n        requestAnimationFrame(detect);\n      })();\n    };\n    if (isOfferer) {\n      dataChannelRef.current = pcRef.current.createDataChannel(\"chat\");\n      setupDataChannel();\n    } else {\n      pcRef.current.ondatachannel = ({\n        channel\n      }) => {\n        dataChannelRef.current = channel;\n        setupDataChannel();\n      };\n    }\n    pcRef.current.onicecandidate = ({\n      candidate\n    }) => {\n      if (candidate) {\n        wsRef.current.send(JSON.stringify({\n          type: \"candidate\",\n          candidate\n        }));\n      }\n    };\n    if (isOfferer) {\n      const offer = await pcRef.current.createOffer();\n      await pcRef.current.setLocalDescription(offer);\n      wsRef.current.send(JSON.stringify({\n        type: \"offer\",\n        offer\n      }));\n    }\n    setStatus(\"connected\");\n  }\n  function setupDataChannel() {\n    dataChannelRef.current.onopen = () => console.log(\"DataChannel open\");\n    dataChannelRef.current.onmessage = ({\n      data\n    }) => {\n      var _parsed;\n      let parsed;\n      try {\n        parsed = JSON.parse(data);\n      } catch {}\n      if (((_parsed = parsed) === null || _parsed === void 0 ? void 0 : _parsed.type) === \"mute\") {\n        setRemoteMuted(parsed.muted);\n      } else {\n        setChatMessages(prev => [...prev, {\n          sender: \"peer\",\n          text: data\n        }]);\n      }\n    };\n  }\n  function sendMessage(text) {\n    var _dataChannelRef$curre;\n    if (((_dataChannelRef$curre = dataChannelRef.current) === null || _dataChannelRef$curre === void 0 ? void 0 : _dataChannelRef$curre.readyState) === \"open\") {\n      dataChannelRef.current.send(text);\n      setChatMessages(prev => [...prev, {\n        sender: \"local\",\n        text\n      }]);\n    }\n  }\n  function toggleMute() {\n    var _localStreamRef$curre, _dataChannelRef$curre2;\n    const track = (_localStreamRef$curre = localStreamRef.current) === null || _localStreamRef$curre === void 0 ? void 0 : _localStreamRef$curre.getAudioTracks()[0];\n    if (!track) return;\n    track.enabled = !track.enabled;\n    if (!isInitiator && ((_dataChannelRef$curre2 = dataChannelRef.current) === null || _dataChannelRef$curre2 === void 0 ? void 0 : _dataChannelRef$curre2.readyState) === \"open\") {\n      dataChannelRef.current.send(JSON.stringify({\n        type: \"mute\",\n        muted: !track.enabled\n      }));\n    }\n  }\n  function hangUp() {\n    var _localStreamRef$curre2;\n    if (isInitiator) {\n      wsRef.current.send(JSON.stringify({\n        type: \"end-call\"\n      }));\n    }\n    setStatus(\"ended\");\n    (_localStreamRef$curre2 = localStreamRef.current) === null || _localStreamRef$curre2 === void 0 ? void 0 : _localStreamRef$curre2.getTracks().forEach(t => t.stop());\n    if (remoteAudioRef.current) remoteAudioRef.current.srcObject = null;\n    setTimeout(() => {\n      var _wsRef$current2, _pcRef$current2;\n      (_wsRef$current2 = wsRef.current) === null || _wsRef$current2 === void 0 ? void 0 : _wsRef$current2.close();\n      (_pcRef$current2 = pcRef.current) === null || _pcRef$current2 === void 0 ? void 0 : _pcRef$current2.close();\n    }, 100);\n  }\n  return {\n    remoteAudioRef,\n    status,\n    chatMessages,\n    sendMessage,\n    toggleMute,\n    hangUp,\n    localSpeaking,\n    remoteSpeaking,\n    remoteMuted\n  };\n}\n_s(useWebRTC, \"kNVkQRP/bn1rIT3nAdkBUn9hhUs=\");","map":{"version":3,"names":["useEffect","useRef","useState","useWebRTC","callId","start","isInitiator","_s","wsRef","pcRef","dataChannelRef","remoteAudioRef","localStreamRef","status","setStatus","statusRef","current","chatMessages","setChatMessages","localSpeaking","setLocalSpeaking","remoteSpeaking","setRemoteSpeaking","remoteMuted","setRemoteMuted","navigator","mediaDevices","getUserMedia","audio","then","stream","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","src","createMediaStreamSource","connect","fftSize","dataArr","Uint8Array","frequencyBinCount","detect","getByteFrequencyData","reduce","a","v","length","requestAnimationFrame","catch","err","console","error","serverUrl","process","env","REACT_APP_SERVER_URL","WebSocket","replace","onopen","log","onclose","onmessage","data","msg","JSON","parse","type","peers","initiateCall","setRemoteDescription","offer","answer","createAnswer","setLocalDescription","send","stringify","addIceCandidate","candidate","_wsRef$current","_pcRef$current","close","isOfferer","RTCPeerConnection","iceServers","urls","REACT_APP_STUN_SERVER","getTracks","forEach","track","addTrack","ontrack","streams","srcObject","play","e","warn","rt","getAudioTracks","onmute","onunmute","createDataChannel","setupDataChannel","ondatachannel","channel","onicecandidate","createOffer","_parsed","parsed","muted","prev","sender","text","sendMessage","_dataChannelRef$curre","readyState","toggleMute","_localStreamRef$curre","_dataChannelRef$curre2","enabled","hangUp","_localStreamRef$curre2","t","stop","setTimeout","_wsRef$current2","_pcRef$current2"],"sources":["/Users/theodiamant/Desktop/webrtc/client/src/hooks/useWebRTC.js"],"sourcesContent":["// src/hooks/useWebRTC.js\nimport { useEffect, useRef, useState } from \"react\";\n\nexport default function useWebRTC(callId, { start = true, isInitiator = false }) {\n  const wsRef = useRef();\n  const pcRef = useRef();\n  const dataChannelRef = useRef();\n  const remoteAudioRef = useRef();\n  const localStreamRef = useRef();\n  const [status, setStatus] = useState(\"waiting\");\n  const statusRef = useRef(status);\n  useEffect(() => { statusRef.current = status; }, [status]);\n\n  const [chatMessages, setChatMessages] = useState([]);\n  const [localSpeaking, setLocalSpeaking] = useState(false);\n  const [remoteSpeaking, setRemoteSpeaking] = useState(false);\n  const [remoteMuted, setRemoteMuted] = useState(false);\n\n  // --- Micro local ---\n  useEffect(() => {\n    if (!start) return;\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      localStreamRef.current = stream;\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      const analyser = audioCtx.createAnalyser();\n      const src = audioCtx.createMediaStreamSource(stream);\n      src.connect(analyser);\n      analyser.fftSize = 256;\n      const dataArr = new Uint8Array(analyser.frequencyBinCount);\n      (function detect() {\n        analyser.getByteFrequencyData(dataArr);\n        setLocalSpeaking(dataArr.reduce((a, v) => a + v, 0) / dataArr.length > 30);\n        requestAnimationFrame(detect);\n      })();\n    }).catch(err => console.error(\"Microphone error\", err));\n  }, [start]);\n\n  // --- WebSocket setup ---\n  useEffect(() => {\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n    wsRef.current = new WebSocket(`${serverUrl.replace(/^http/, \"ws\")}?roomId=${callId}`);\n    wsRef.current.onopen = () => console.log(\"WS open\");\n    wsRef.current.onclose = () => console.log(\"WS closed\");\n\n    wsRef.current.onmessage = async ({ data }) => {\n      let msg;\n      try { msg = JSON.parse(data); } catch { return; }\n\n      switch (msg.type) {\n        case \"room-status\":\n          console.log(\"Room peers:\", msg.peers);\n          if (msg.peers >= 2 && statusRef.current === \"waiting\" && start && isInitiator) {\n            await initiateCall(true);\n          }\n          break;\n        case \"offer\":\n          if (!pcRef.current && start) await initiateCall(false);\n          await pcRef.current.setRemoteDescription(msg.offer);\n          const answer = await pcRef.current.createAnswer();\n          await pcRef.current.setLocalDescription(answer);\n          wsRef.current.send(JSON.stringify({ type: \"answer\", answer }));\n          break;\n        case \"answer\":\n          await pcRef.current.setRemoteDescription(msg.answer);\n          break;\n        case \"candidate\":\n          await pcRef.current.addIceCandidate(msg.candidate);\n          break;\n        case \"peer-left\":\n          setStatus(\"peer-left\");\n          break;\n        case \"call-ended\":\n          setStatus(\"ended\");\n          break;\n      }\n    };\n\n    return () => {\n      wsRef.current?.close();\n      pcRef.current?.close();\n    };\n  }, [callId]); // PAS de start ici\n\n  // --- Initialisation WebRTC ---\n  async function initiateCall(isOfferer) {\n    setStatus(\"connecting\");\n    pcRef.current = new RTCPeerConnection({\n      iceServers: [{ urls: process.env.REACT_APP_STUN_SERVER }],\n    });\n\n    if (!localStreamRef.current) {\n      localStreamRef.current = await navigator.mediaDevices.getUserMedia({ audio: true });\n    }\n\n    localStreamRef.current.getTracks().forEach(track =>\n      pcRef.current.addTrack(track, localStreamRef.current)\n    );\n\n    pcRef.current.ontrack = ({ streams: [stream] }) => {\n      if (remoteAudioRef.current) {\n        remoteAudioRef.current.srcObject = stream;\n        remoteAudioRef.current.play().catch(e => console.warn(\"Playback error\", e));\n      }\n\n      const rt = stream.getAudioTracks()[0];\n      if (rt) {\n        rt.onmute = () => setRemoteMuted(true);\n        rt.onunmute = () => setRemoteMuted(false);\n      }\n\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      const analyser = audioCtx.createAnalyser();\n      const src = audioCtx.createMediaStreamSource(stream);\n      src.connect(analyser);\n      analyser.fftSize = 256;\n      const dataArr = new Uint8Array(analyser.frequencyBinCount);\n      (function detect() {\n        analyser.getByteFrequencyData(dataArr);\n        setRemoteSpeaking(dataArr.reduce((a, v) => a + v, 0) / dataArr.length > 30);\n        requestAnimationFrame(detect);\n      })();\n    };\n\n    if (isOfferer) {\n      dataChannelRef.current = pcRef.current.createDataChannel(\"chat\");\n      setupDataChannel();\n    } else {\n      pcRef.current.ondatachannel = ({ channel }) => {\n        dataChannelRef.current = channel;\n        setupDataChannel();\n      };\n    }\n\n    pcRef.current.onicecandidate = ({ candidate }) => {\n      if (candidate) {\n        wsRef.current.send(JSON.stringify({ type: \"candidate\", candidate }));\n      }\n    };\n\n    if (isOfferer) {\n      const offer = await pcRef.current.createOffer();\n      await pcRef.current.setLocalDescription(offer);\n      wsRef.current.send(JSON.stringify({ type: \"offer\", offer }));\n    }\n\n    setStatus(\"connected\");\n  }\n\n  function setupDataChannel() {\n    dataChannelRef.current.onopen = () => console.log(\"DataChannel open\");\n    dataChannelRef.current.onmessage = ({ data }) => {\n      let parsed;\n      try { parsed = JSON.parse(data); } catch {}\n      if (parsed?.type === \"mute\") {\n        setRemoteMuted(parsed.muted);\n      } else {\n        setChatMessages(prev => [...prev, { sender: \"peer\", text: data }]);\n      }\n    };\n  }\n\n  function sendMessage(text) {\n    if (dataChannelRef.current?.readyState === \"open\") {\n      dataChannelRef.current.send(text);\n      setChatMessages(prev => [...prev, { sender: \"local\", text }]);\n    }\n  }\n\n  function toggleMute() {\n    const track = localStreamRef.current?.getAudioTracks()[0];\n    if (!track) return;\n    track.enabled = !track.enabled;\n    if (!isInitiator && dataChannelRef.current?.readyState === \"open\") {\n      dataChannelRef.current.send(\n        JSON.stringify({ type: \"mute\", muted: !track.enabled })\n      );\n    }\n  }\n\n  function hangUp() {\n    if (isInitiator) {\n      wsRef.current.send(JSON.stringify({ type: \"end-call\" }));\n    }\n    setStatus(\"ended\");\n    localStreamRef.current?.getTracks().forEach(t => t.stop());\n    if (remoteAudioRef.current) remoteAudioRef.current.srcObject = null;\n    setTimeout(() => {\n      wsRef.current?.close();\n      pcRef.current?.close();\n    }, 100);\n  }\n\n  return {\n    remoteAudioRef,\n    status,\n    chatMessages,\n    sendMessage,\n    toggleMute,\n    hangUp,\n    localSpeaking,\n    remoteSpeaking,\n    remoteMuted,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}